# Generated by Django 5.2.6 on 2025-09-07 08:39

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CalendarIntegration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("google", "Google Calendar"),
                            ("outlook", "Microsoft Outlook"),
                            ("apple", "Apple Calendar"),
                        ],
                        max_length=20,
                    ),
                ),
                ("access_token", models.TextField()),
                ("refresh_token", models.TextField(blank=True)),
                ("token_expires_at", models.DateTimeField(blank=True, null=True)),
                ("provider_user_id", models.CharField(blank=True, max_length=200)),
                ("provider_email", models.EmailField(blank=True, max_length=254)),
                ("calendar_id", models.CharField(blank=True, max_length=200)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                (
                    "sync_token",
                    models.TextField(
                        blank=True, help_text="Token for incremental sync"
                    ),
                ),
                (
                    "sync_errors",
                    models.IntegerField(
                        default=0, help_text="Consecutive sync error count"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("sync_enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Calendar Integration",
                "verbose_name_plural": "Calendar Integrations",
                "db_table": "calendar_integrations",
            },
        ),
        migrations.CreateModel(
            name="IntegrationLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "log_type",
                    models.CharField(
                        choices=[
                            ("calendar_sync", "Calendar Sync"),
                            ("video_link_created", "Video Link Created"),
                            ("webhook_sent", "Webhook Sent"),
                            ("error", "Error"),
                        ],
                        max_length=30,
                    ),
                ),
                ("integration_type", models.CharField(blank=True, max_length=50)),
                ("message", models.TextField()),
                ("details", models.JSONField(blank=True, default=dict)),
                ("success", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Integration Log",
                "verbose_name_plural": "Integration Logs",
                "db_table": "integration_logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="VideoConferenceIntegration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("zoom", "Zoom"),
                            ("google_meet", "Google Meet"),
                            ("microsoft_teams", "Microsoft Teams"),
                            ("webex", "Cisco Webex"),
                        ],
                        max_length=20,
                    ),
                ),
                ("access_token", models.TextField()),
                ("refresh_token", models.TextField(blank=True)),
                ("token_expires_at", models.DateTimeField(blank=True, null=True)),
                ("provider_user_id", models.CharField(blank=True, max_length=200)),
                ("provider_email", models.EmailField(blank=True, max_length=254)),
                ("last_api_call", models.DateTimeField(blank=True, null=True)),
                ("api_calls_today", models.IntegerField(default=0)),
                ("rate_limit_reset_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("auto_generate_links", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Video Conference Integration",
                "verbose_name_plural": "Video Conference Integrations",
                "db_table": "video_integrations",
            },
        ),
        migrations.CreateModel(
            name="WebhookIntegration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("webhook_url", models.URLField()),
                (
                    "events",
                    models.JSONField(
                        default=list, help_text="List of events to trigger webhook"
                    ),
                ),
                ("secret_key", models.CharField(blank=True, max_length=200)),
                (
                    "headers",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional headers to send"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("retry_failed", models.BooleanField(default=True)),
                ("max_retries", models.IntegerField(default=3)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Webhook Integration",
                "verbose_name_plural": "Webhook Integrations",
                "db_table": "webhook_integrations",
            },
        ),
    ]
